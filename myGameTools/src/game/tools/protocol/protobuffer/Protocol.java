// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: protocol.proto

package game.tools.protocol.protobuffer;

public final class Protocol {
  private Protocol() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }
  /**
   * Protobuf enum {@code Gender}
   */
  public enum Gender
      implements com.google.protobuf.Internal.EnumLite {
    /**
     * <code>MAN = 0;</code>
     */
    MAN(0),
    /**
     * <code>WOMAN = 1;</code>
     */
    WOMAN(1),
    UNRECOGNIZED(-1),
    ;

    /**
     * <code>MAN = 0;</code>
     */
    public static final int MAN_VALUE = 0;
    /**
     * <code>WOMAN = 1;</code>
     */
    public static final int WOMAN_VALUE = 1;


    public final int getNumber() {
      return value;
    }

    /**
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static Gender valueOf(int value) {
      return forNumber(value);
    }

    public static Gender forNumber(int value) {
      switch (value) {
        case 0: return MAN;
        case 1: return WOMAN;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<Gender>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        Gender> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<Gender>() {
            public Gender findValueByNumber(int number) {
              return Gender.forNumber(number);
            }
          };

    private final int value;

    private Gender(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:Gender)
  }

  public interface LoginOrBuilder extends
      // @@protoc_insertion_point(interface_extends:Login)
      com.google.protobuf.MessageLiteOrBuilder {

    /**
     * <code>optional string userId = 1;</code>
     */
    java.lang.String getUserId();
    /**
     * <code>optional string userId = 1;</code>
     */
    com.google.protobuf.ByteString
        getUserIdBytes();

    /**
     * <code>optional string channl = 2;</code>
     */
    java.lang.String getChannl();
    /**
     * <code>optional string channl = 2;</code>
     */
    com.google.protobuf.ByteString
        getChannlBytes();

    /**
     * <code>optional string plaform = 3;</code>
     */
    java.lang.String getPlaform();
    /**
     * <code>optional string plaform = 3;</code>
     */
    com.google.protobuf.ByteString
        getPlaformBytes();
  }
  /**
   * Protobuf type {@code Login}
   */
  public  static final class Login extends
      com.google.protobuf.GeneratedMessageLite<
          Login, Login.Builder> implements
      // @@protoc_insertion_point(message_implements:Login)
      LoginOrBuilder {
    private Login() {
      userId_ = "";
      channl_ = "";
      plaform_ = "";
    }
    public static final int USERID_FIELD_NUMBER = 1;
    private java.lang.String userId_;
    /**
     * <code>optional string userId = 1;</code>
     */
    public java.lang.String getUserId() {
      return userId_;
    }
    /**
     * <code>optional string userId = 1;</code>
     */
    public com.google.protobuf.ByteString
        getUserIdBytes() {
      return com.google.protobuf.ByteString.copyFromUtf8(userId_);
    }
    /**
     * <code>optional string userId = 1;</code>
     */
    private void setUserId(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  
      userId_ = value;
    }
    /**
     * <code>optional string userId = 1;</code>
     */
    private void clearUserId() {
      
      userId_ = getDefaultInstance().getUserId();
    }
    /**
     * <code>optional string userId = 1;</code>
     */
    private void setUserIdBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
      
      userId_ = value.toStringUtf8();
    }

    public static final int CHANNL_FIELD_NUMBER = 2;
    private java.lang.String channl_;
    /**
     * <code>optional string channl = 2;</code>
     */
    public java.lang.String getChannl() {
      return channl_;
    }
    /**
     * <code>optional string channl = 2;</code>
     */
    public com.google.protobuf.ByteString
        getChannlBytes() {
      return com.google.protobuf.ByteString.copyFromUtf8(channl_);
    }
    /**
     * <code>optional string channl = 2;</code>
     */
    private void setChannl(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  
      channl_ = value;
    }
    /**
     * <code>optional string channl = 2;</code>
     */
    private void clearChannl() {
      
      channl_ = getDefaultInstance().getChannl();
    }
    /**
     * <code>optional string channl = 2;</code>
     */
    private void setChannlBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
      
      channl_ = value.toStringUtf8();
    }

    public static final int PLAFORM_FIELD_NUMBER = 3;
    private java.lang.String plaform_;
    /**
     * <code>optional string plaform = 3;</code>
     */
    public java.lang.String getPlaform() {
      return plaform_;
    }
    /**
     * <code>optional string plaform = 3;</code>
     */
    public com.google.protobuf.ByteString
        getPlaformBytes() {
      return com.google.protobuf.ByteString.copyFromUtf8(plaform_);
    }
    /**
     * <code>optional string plaform = 3;</code>
     */
    private void setPlaform(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  
      plaform_ = value;
    }
    /**
     * <code>optional string plaform = 3;</code>
     */
    private void clearPlaform() {
      
      plaform_ = getDefaultInstance().getPlaform();
    }
    /**
     * <code>optional string plaform = 3;</code>
     */
    private void setPlaformBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
      
      plaform_ = value.toStringUtf8();
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (!userId_.isEmpty()) {
        output.writeString(1, getUserId());
      }
      if (!channl_.isEmpty()) {
        output.writeString(2, getChannl());
      }
      if (!plaform_.isEmpty()) {
        output.writeString(3, getPlaform());
      }
    }

    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (!userId_.isEmpty()) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(1, getUserId());
      }
      if (!channl_.isEmpty()) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(2, getChannl());
      }
      if (!plaform_.isEmpty()) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(3, getPlaform());
      }
      memoizedSerializedSize = size;
      return size;
    }

    public static game.tools.protocol.protobuffer.Protocol.Login parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static game.tools.protocol.protobuffer.Protocol.Login parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static game.tools.protocol.protobuffer.Protocol.Login parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static game.tools.protocol.protobuffer.Protocol.Login parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static game.tools.protocol.protobuffer.Protocol.Login parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static game.tools.protocol.protobuffer.Protocol.Login parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static game.tools.protocol.protobuffer.Protocol.Login parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input);
    }
    public static game.tools.protocol.protobuffer.Protocol.Login parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static game.tools.protocol.protobuffer.Protocol.Login parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static game.tools.protocol.protobuffer.Protocol.Login parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(game.tools.protocol.protobuffer.Protocol.Login prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }

    /**
     * Protobuf type {@code Login}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          game.tools.protocol.protobuffer.Protocol.Login, Builder> implements
        // @@protoc_insertion_point(builder_implements:Login)
        game.tools.protocol.protobuffer.Protocol.LoginOrBuilder {
      // Construct using game.tools.protocol.protobuffer.Protocol.Login.newBuilder()
      private Builder() {
        super(DEFAULT_INSTANCE);
      }


      /**
       * <code>optional string userId = 1;</code>
       */
      public java.lang.String getUserId() {
        return instance.getUserId();
      }
      /**
       * <code>optional string userId = 1;</code>
       */
      public com.google.protobuf.ByteString
          getUserIdBytes() {
        return instance.getUserIdBytes();
      }
      /**
       * <code>optional string userId = 1;</code>
       */
      public Builder setUserId(
          java.lang.String value) {
        copyOnWrite();
        instance.setUserId(value);
        return this;
      }
      /**
       * <code>optional string userId = 1;</code>
       */
      public Builder clearUserId() {
        copyOnWrite();
        instance.clearUserId();
        return this;
      }
      /**
       * <code>optional string userId = 1;</code>
       */
      public Builder setUserIdBytes(
          com.google.protobuf.ByteString value) {
        copyOnWrite();
        instance.setUserIdBytes(value);
        return this;
      }

      /**
       * <code>optional string channl = 2;</code>
       */
      public java.lang.String getChannl() {
        return instance.getChannl();
      }
      /**
       * <code>optional string channl = 2;</code>
       */
      public com.google.protobuf.ByteString
          getChannlBytes() {
        return instance.getChannlBytes();
      }
      /**
       * <code>optional string channl = 2;</code>
       */
      public Builder setChannl(
          java.lang.String value) {
        copyOnWrite();
        instance.setChannl(value);
        return this;
      }
      /**
       * <code>optional string channl = 2;</code>
       */
      public Builder clearChannl() {
        copyOnWrite();
        instance.clearChannl();
        return this;
      }
      /**
       * <code>optional string channl = 2;</code>
       */
      public Builder setChannlBytes(
          com.google.protobuf.ByteString value) {
        copyOnWrite();
        instance.setChannlBytes(value);
        return this;
      }

      /**
       * <code>optional string plaform = 3;</code>
       */
      public java.lang.String getPlaform() {
        return instance.getPlaform();
      }
      /**
       * <code>optional string plaform = 3;</code>
       */
      public com.google.protobuf.ByteString
          getPlaformBytes() {
        return instance.getPlaformBytes();
      }
      /**
       * <code>optional string plaform = 3;</code>
       */
      public Builder setPlaform(
          java.lang.String value) {
        copyOnWrite();
        instance.setPlaform(value);
        return this;
      }
      /**
       * <code>optional string plaform = 3;</code>
       */
      public Builder clearPlaform() {
        copyOnWrite();
        instance.clearPlaform();
        return this;
      }
      /**
       * <code>optional string plaform = 3;</code>
       */
      public Builder setPlaformBytes(
          com.google.protobuf.ByteString value) {
        copyOnWrite();
        instance.setPlaformBytes(value);
        return this;
      }

      // @@protoc_insertion_point(builder_scope:Login)
    }
    protected final Object dynamicMethod(
        com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
        Object arg0, Object arg1) {
      switch (method) {
        case NEW_MUTABLE_INSTANCE: {
          return new game.tools.protocol.protobuffer.Protocol.Login();
        }
        case IS_INITIALIZED: {
          return DEFAULT_INSTANCE;
        }
        case MAKE_IMMUTABLE: {
          return null;
        }
        case NEW_BUILDER: {
          return new Builder();
        }
        case VISIT: {
          Visitor visitor = (Visitor) arg0;
          game.tools.protocol.protobuffer.Protocol.Login other = (game.tools.protocol.protobuffer.Protocol.Login) arg1;
          userId_ = visitor.visitString(!userId_.isEmpty(), userId_,
              !other.userId_.isEmpty(), other.userId_);
          channl_ = visitor.visitString(!channl_.isEmpty(), channl_,
              !other.channl_.isEmpty(), other.channl_);
          plaform_ = visitor.visitString(!plaform_.isEmpty(), plaform_,
              !other.plaform_.isEmpty(), other.plaform_);
          if (visitor == com.google.protobuf.GeneratedMessageLite.MergeFromVisitor
              .INSTANCE) {
          }
          return this;
        }
        case MERGE_FROM_STREAM: {
          com.google.protobuf.CodedInputStream input =
              (com.google.protobuf.CodedInputStream) arg0;
          com.google.protobuf.ExtensionRegistryLite extensionRegistry =
              (com.google.protobuf.ExtensionRegistryLite) arg1;
          try {
            boolean done = false;
            while (!done) {
              int tag = input.readTag();
              switch (tag) {
                case 0:
                  done = true;
                  break;
                default: {
                  if (!input.skipField(tag)) {
                    done = true;
                  }
                  break;
                }
                case 10: {
                  String s = input.readStringRequireUtf8();

                  userId_ = s;
                  break;
                }
                case 18: {
                  String s = input.readStringRequireUtf8();

                  channl_ = s;
                  break;
                }
                case 26: {
                  String s = input.readStringRequireUtf8();

                  plaform_ = s;
                  break;
                }
              }
            }
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw new RuntimeException(e.setUnfinishedMessage(this));
          } catch (java.io.IOException e) {
            throw new RuntimeException(
                new com.google.protobuf.InvalidProtocolBufferException(
                    e.getMessage()).setUnfinishedMessage(this));
          } finally {
          }
        }
        case GET_DEFAULT_INSTANCE: {
          return DEFAULT_INSTANCE;
        }
        case GET_PARSER: {
          if (PARSER == null) {    synchronized (game.tools.protocol.protobuffer.Protocol.Login.class) {
              if (PARSER == null) {
                PARSER = new DefaultInstanceBasedParser(DEFAULT_INSTANCE);
              }
            }
          }
          return PARSER;
        }
      }
      throw new UnsupportedOperationException();
    }


    // @@protoc_insertion_point(class_scope:Login)
    private static final game.tools.protocol.protobuffer.Protocol.Login DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new Login();
      DEFAULT_INSTANCE.makeImmutable();
    }

    public static game.tools.protocol.protobuffer.Protocol.Login getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static volatile com.google.protobuf.Parser<Login> PARSER;

    public static com.google.protobuf.Parser<Login> parser() {
      return DEFAULT_INSTANCE.getParserForType();
    }
  }

  public interface BaseDataTypeOrBuilder extends
      // @@protoc_insertion_point(interface_extends:BaseDataType)
      com.google.protobuf.MessageLiteOrBuilder {

    /**
     * <code>optional int32 a = 1;</code>
     */
    int getA();

    /**
     * <code>optional float b = 2;</code>
     */
    float getB();

    /**
     * <code>optional string c = 3;</code>
     */
    java.lang.String getC();
    /**
     * <code>optional string c = 3;</code>
     */
    com.google.protobuf.ByteString
        getCBytes();

    /**
     * <code>optional double d = 4;</code>
     */
    double getD();

    /**
     * <code>optional bool e = 5;</code>
     */
    boolean getE();

    /**
     * <code>optional int64 f = 6;</code>
     */
    long getF();

    /**
     * <code>optional bytes g = 7;</code>
     */
    com.google.protobuf.ByteString getG();
  }
  /**
   * Protobuf type {@code BaseDataType}
   */
  public  static final class BaseDataType extends
      com.google.protobuf.GeneratedMessageLite<
          BaseDataType, BaseDataType.Builder> implements
      // @@protoc_insertion_point(message_implements:BaseDataType)
      BaseDataTypeOrBuilder {
    private BaseDataType() {
      c_ = "";
      g_ = com.google.protobuf.ByteString.EMPTY;
    }
    public static final int A_FIELD_NUMBER = 1;
    private int a_;
    /**
     * <code>optional int32 a = 1;</code>
     */
    public int getA() {
      return a_;
    }
    /**
     * <code>optional int32 a = 1;</code>
     */
    private void setA(int value) {
      
      a_ = value;
    }
    /**
     * <code>optional int32 a = 1;</code>
     */
    private void clearA() {
      
      a_ = 0;
    }

    public static final int B_FIELD_NUMBER = 2;
    private float b_;
    /**
     * <code>optional float b = 2;</code>
     */
    public float getB() {
      return b_;
    }
    /**
     * <code>optional float b = 2;</code>
     */
    private void setB(float value) {
      
      b_ = value;
    }
    /**
     * <code>optional float b = 2;</code>
     */
    private void clearB() {
      
      b_ = 0F;
    }

    public static final int C_FIELD_NUMBER = 3;
    private java.lang.String c_;
    /**
     * <code>optional string c = 3;</code>
     */
    public java.lang.String getC() {
      return c_;
    }
    /**
     * <code>optional string c = 3;</code>
     */
    public com.google.protobuf.ByteString
        getCBytes() {
      return com.google.protobuf.ByteString.copyFromUtf8(c_);
    }
    /**
     * <code>optional string c = 3;</code>
     */
    private void setC(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  
      c_ = value;
    }
    /**
     * <code>optional string c = 3;</code>
     */
    private void clearC() {
      
      c_ = getDefaultInstance().getC();
    }
    /**
     * <code>optional string c = 3;</code>
     */
    private void setCBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
      
      c_ = value.toStringUtf8();
    }

    public static final int D_FIELD_NUMBER = 4;
    private double d_;
    /**
     * <code>optional double d = 4;</code>
     */
    public double getD() {
      return d_;
    }
    /**
     * <code>optional double d = 4;</code>
     */
    private void setD(double value) {
      
      d_ = value;
    }
    /**
     * <code>optional double d = 4;</code>
     */
    private void clearD() {
      
      d_ = 0D;
    }

    public static final int E_FIELD_NUMBER = 5;
    private boolean e_;
    /**
     * <code>optional bool e = 5;</code>
     */
    public boolean getE() {
      return e_;
    }
    /**
     * <code>optional bool e = 5;</code>
     */
    private void setE(boolean value) {
      
      e_ = value;
    }
    /**
     * <code>optional bool e = 5;</code>
     */
    private void clearE() {
      
      e_ = false;
    }

    public static final int F_FIELD_NUMBER = 6;
    private long f_;
    /**
     * <code>optional int64 f = 6;</code>
     */
    public long getF() {
      return f_;
    }
    /**
     * <code>optional int64 f = 6;</code>
     */
    private void setF(long value) {
      
      f_ = value;
    }
    /**
     * <code>optional int64 f = 6;</code>
     */
    private void clearF() {
      
      f_ = 0L;
    }

    public static final int G_FIELD_NUMBER = 7;
    private com.google.protobuf.ByteString g_;
    /**
     * <code>optional bytes g = 7;</code>
     */
    public com.google.protobuf.ByteString getG() {
      return g_;
    }
    /**
     * <code>optional bytes g = 7;</code>
     */
    private void setG(com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  
      g_ = value;
    }
    /**
     * <code>optional bytes g = 7;</code>
     */
    private void clearG() {
      
      g_ = getDefaultInstance().getG();
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (a_ != 0) {
        output.writeInt32(1, a_);
      }
      if (b_ != 0F) {
        output.writeFloat(2, b_);
      }
      if (!c_.isEmpty()) {
        output.writeString(3, getC());
      }
      if (d_ != 0D) {
        output.writeDouble(4, d_);
      }
      if (e_ != false) {
        output.writeBool(5, e_);
      }
      if (f_ != 0L) {
        output.writeInt64(6, f_);
      }
      if (!g_.isEmpty()) {
        output.writeBytes(7, g_);
      }
    }

    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (a_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, a_);
      }
      if (b_ != 0F) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(2, b_);
      }
      if (!c_.isEmpty()) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(3, getC());
      }
      if (d_ != 0D) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(4, d_);
      }
      if (e_ != false) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(5, e_);
      }
      if (f_ != 0L) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(6, f_);
      }
      if (!g_.isEmpty()) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(7, g_);
      }
      memoizedSerializedSize = size;
      return size;
    }

    public static game.tools.protocol.protobuffer.Protocol.BaseDataType parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static game.tools.protocol.protobuffer.Protocol.BaseDataType parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static game.tools.protocol.protobuffer.Protocol.BaseDataType parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static game.tools.protocol.protobuffer.Protocol.BaseDataType parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static game.tools.protocol.protobuffer.Protocol.BaseDataType parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static game.tools.protocol.protobuffer.Protocol.BaseDataType parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static game.tools.protocol.protobuffer.Protocol.BaseDataType parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input);
    }
    public static game.tools.protocol.protobuffer.Protocol.BaseDataType parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static game.tools.protocol.protobuffer.Protocol.BaseDataType parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static game.tools.protocol.protobuffer.Protocol.BaseDataType parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(game.tools.protocol.protobuffer.Protocol.BaseDataType prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }

    /**
     * Protobuf type {@code BaseDataType}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          game.tools.protocol.protobuffer.Protocol.BaseDataType, Builder> implements
        // @@protoc_insertion_point(builder_implements:BaseDataType)
        game.tools.protocol.protobuffer.Protocol.BaseDataTypeOrBuilder {
      // Construct using game.tools.protocol.protobuffer.Protocol.BaseDataType.newBuilder()
      private Builder() {
        super(DEFAULT_INSTANCE);
      }


      /**
       * <code>optional int32 a = 1;</code>
       */
      public int getA() {
        return instance.getA();
      }
      /**
       * <code>optional int32 a = 1;</code>
       */
      public Builder setA(int value) {
        copyOnWrite();
        instance.setA(value);
        return this;
      }
      /**
       * <code>optional int32 a = 1;</code>
       */
      public Builder clearA() {
        copyOnWrite();
        instance.clearA();
        return this;
      }

      /**
       * <code>optional float b = 2;</code>
       */
      public float getB() {
        return instance.getB();
      }
      /**
       * <code>optional float b = 2;</code>
       */
      public Builder setB(float value) {
        copyOnWrite();
        instance.setB(value);
        return this;
      }
      /**
       * <code>optional float b = 2;</code>
       */
      public Builder clearB() {
        copyOnWrite();
        instance.clearB();
        return this;
      }

      /**
       * <code>optional string c = 3;</code>
       */
      public java.lang.String getC() {
        return instance.getC();
      }
      /**
       * <code>optional string c = 3;</code>
       */
      public com.google.protobuf.ByteString
          getCBytes() {
        return instance.getCBytes();
      }
      /**
       * <code>optional string c = 3;</code>
       */
      public Builder setC(
          java.lang.String value) {
        copyOnWrite();
        instance.setC(value);
        return this;
      }
      /**
       * <code>optional string c = 3;</code>
       */
      public Builder clearC() {
        copyOnWrite();
        instance.clearC();
        return this;
      }
      /**
       * <code>optional string c = 3;</code>
       */
      public Builder setCBytes(
          com.google.protobuf.ByteString value) {
        copyOnWrite();
        instance.setCBytes(value);
        return this;
      }

      /**
       * <code>optional double d = 4;</code>
       */
      public double getD() {
        return instance.getD();
      }
      /**
       * <code>optional double d = 4;</code>
       */
      public Builder setD(double value) {
        copyOnWrite();
        instance.setD(value);
        return this;
      }
      /**
       * <code>optional double d = 4;</code>
       */
      public Builder clearD() {
        copyOnWrite();
        instance.clearD();
        return this;
      }

      /**
       * <code>optional bool e = 5;</code>
       */
      public boolean getE() {
        return instance.getE();
      }
      /**
       * <code>optional bool e = 5;</code>
       */
      public Builder setE(boolean value) {
        copyOnWrite();
        instance.setE(value);
        return this;
      }
      /**
       * <code>optional bool e = 5;</code>
       */
      public Builder clearE() {
        copyOnWrite();
        instance.clearE();
        return this;
      }

      /**
       * <code>optional int64 f = 6;</code>
       */
      public long getF() {
        return instance.getF();
      }
      /**
       * <code>optional int64 f = 6;</code>
       */
      public Builder setF(long value) {
        copyOnWrite();
        instance.setF(value);
        return this;
      }
      /**
       * <code>optional int64 f = 6;</code>
       */
      public Builder clearF() {
        copyOnWrite();
        instance.clearF();
        return this;
      }

      /**
       * <code>optional bytes g = 7;</code>
       */
      public com.google.protobuf.ByteString getG() {
        return instance.getG();
      }
      /**
       * <code>optional bytes g = 7;</code>
       */
      public Builder setG(com.google.protobuf.ByteString value) {
        copyOnWrite();
        instance.setG(value);
        return this;
      }
      /**
       * <code>optional bytes g = 7;</code>
       */
      public Builder clearG() {
        copyOnWrite();
        instance.clearG();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:BaseDataType)
    }
    protected final Object dynamicMethod(
        com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
        Object arg0, Object arg1) {
      switch (method) {
        case NEW_MUTABLE_INSTANCE: {
          return new game.tools.protocol.protobuffer.Protocol.BaseDataType();
        }
        case IS_INITIALIZED: {
          return DEFAULT_INSTANCE;
        }
        case MAKE_IMMUTABLE: {
          return null;
        }
        case NEW_BUILDER: {
          return new Builder();
        }
        case VISIT: {
          Visitor visitor = (Visitor) arg0;
          game.tools.protocol.protobuffer.Protocol.BaseDataType other = (game.tools.protocol.protobuffer.Protocol.BaseDataType) arg1;
          a_ = visitor.visitInt(a_ != 0, a_,
              other.a_ != 0, other.a_);
          b_ = visitor.visitFloat(b_ != 0F, b_,
              other.b_ != 0F, other.b_);
          c_ = visitor.visitString(!c_.isEmpty(), c_,
              !other.c_.isEmpty(), other.c_);
          d_ = visitor.visitDouble(d_ != 0D, d_,
              other.d_ != 0D, other.d_);
          e_ = visitor.visitBoolean(e_ != false, e_,
              other.e_ != false, other.e_);
          f_ = visitor.visitLong(f_ != 0L, f_,
              other.f_ != 0L, other.f_);
          g_ = visitor.visitByteString(g_ != com.google.protobuf.ByteString.EMPTY, g_,
              other.g_ != com.google.protobuf.ByteString.EMPTY, other.g_);
          if (visitor == com.google.protobuf.GeneratedMessageLite.MergeFromVisitor
              .INSTANCE) {
          }
          return this;
        }
        case MERGE_FROM_STREAM: {
          com.google.protobuf.CodedInputStream input =
              (com.google.protobuf.CodedInputStream) arg0;
          com.google.protobuf.ExtensionRegistryLite extensionRegistry =
              (com.google.protobuf.ExtensionRegistryLite) arg1;
          try {
            boolean done = false;
            while (!done) {
              int tag = input.readTag();
              switch (tag) {
                case 0:
                  done = true;
                  break;
                default: {
                  if (!input.skipField(tag)) {
                    done = true;
                  }
                  break;
                }
                case 8: {

                  a_ = input.readInt32();
                  break;
                }
                case 21: {

                  b_ = input.readFloat();
                  break;
                }
                case 26: {
                  String s = input.readStringRequireUtf8();

                  c_ = s;
                  break;
                }
                case 33: {

                  d_ = input.readDouble();
                  break;
                }
                case 40: {

                  e_ = input.readBool();
                  break;
                }
                case 48: {

                  f_ = input.readInt64();
                  break;
                }
                case 58: {

                  g_ = input.readBytes();
                  break;
                }
              }
            }
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw new RuntimeException(e.setUnfinishedMessage(this));
          } catch (java.io.IOException e) {
            throw new RuntimeException(
                new com.google.protobuf.InvalidProtocolBufferException(
                    e.getMessage()).setUnfinishedMessage(this));
          } finally {
          }
        }
        case GET_DEFAULT_INSTANCE: {
          return DEFAULT_INSTANCE;
        }
        case GET_PARSER: {
          if (PARSER == null) {    synchronized (game.tools.protocol.protobuffer.Protocol.BaseDataType.class) {
              if (PARSER == null) {
                PARSER = new DefaultInstanceBasedParser(DEFAULT_INSTANCE);
              }
            }
          }
          return PARSER;
        }
      }
      throw new UnsupportedOperationException();
    }


    // @@protoc_insertion_point(class_scope:BaseDataType)
    private static final game.tools.protocol.protobuffer.Protocol.BaseDataType DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new BaseDataType();
      DEFAULT_INSTANCE.makeImmutable();
    }

    public static game.tools.protocol.protobuffer.Protocol.BaseDataType getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static volatile com.google.protobuf.Parser<BaseDataType> PARSER;

    public static com.google.protobuf.Parser<BaseDataType> parser() {
      return DEFAULT_INSTANCE.getParserForType();
    }
  }

  public interface ComplexDataTypeOrBuilder extends
      // @@protoc_insertion_point(interface_extends:ComplexDataType)
      com.google.protobuf.MessageLiteOrBuilder {

    /**
     * <pre>
     *定义了一个字符串的list列表
     * </pre>
     *
     * <code>repeated string nameList = 1;</code>
     */
    java.util.List<String>
        getNameListList();
    /**
     * <pre>
     *定义了一个字符串的list列表
     * </pre>
     *
     * <code>repeated string nameList = 1;</code>
     */
    int getNameListCount();
    /**
     * <pre>
     *定义了一个字符串的list列表
     * </pre>
     *
     * <code>repeated string nameList = 1;</code>
     */
    java.lang.String getNameList(int index);
    /**
     * <pre>
     *定义了一个字符串的list列表
     * </pre>
     *
     * <code>repeated string nameList = 1;</code>
     */
    com.google.protobuf.ByteString
        getNameListBytes(int index);

    /**
     * <pre>
     *定义了一个BaseDataType对象的列表数据
     * </pre>
     *
     * <code>repeated .BaseDataType baseDataTypeList = 2;</code>
     */
    java.util.List<game.tools.protocol.protobuffer.Protocol.BaseDataType> 
        getBaseDataTypeListList();
    /**
     * <pre>
     *定义了一个BaseDataType对象的列表数据
     * </pre>
     *
     * <code>repeated .BaseDataType baseDataTypeList = 2;</code>
     */
    game.tools.protocol.protobuffer.Protocol.BaseDataType getBaseDataTypeList(int index);
    /**
     * <pre>
     *定义了一个BaseDataType对象的列表数据
     * </pre>
     *
     * <code>repeated .BaseDataType baseDataTypeList = 2;</code>
     */
    int getBaseDataTypeListCount();

    /**
     * <pre>
     *定义了一个BaseDataType对象的MAP数据
     * </pre>
     *
     * <code>map&lt;int32, .BaseDataType&gt; baseDataTypeMap = 3;</code>
     */
    int getBaseDataTypeMapCount();
    /**
     * <pre>
     *定义了一个BaseDataType对象的MAP数据
     * </pre>
     *
     * <code>map&lt;int32, .BaseDataType&gt; baseDataTypeMap = 3;</code>
     */
    boolean containsBaseDataTypeMap(
        int key);
    /**
     * Use {@link #getBaseDataTypeMapMap()} instead.
     */
    @java.lang.Deprecated
    java.util.Map<java.lang.Integer, game.tools.protocol.protobuffer.Protocol.BaseDataType>
    getBaseDataTypeMap();
    /**
     * <pre>
     *定义了一个BaseDataType对象的MAP数据
     * </pre>
     *
     * <code>map&lt;int32, .BaseDataType&gt; baseDataTypeMap = 3;</code>
     */
    java.util.Map<java.lang.Integer, game.tools.protocol.protobuffer.Protocol.BaseDataType>
    getBaseDataTypeMapMap();
    /**
     * <pre>
     *定义了一个BaseDataType对象的MAP数据
     * </pre>
     *
     * <code>map&lt;int32, .BaseDataType&gt; baseDataTypeMap = 3;</code>
     */

    game.tools.protocol.protobuffer.Protocol.BaseDataType getBaseDataTypeMapOrDefault(
        int key,
        game.tools.protocol.protobuffer.Protocol.BaseDataType defaultValue);
    /**
     * <pre>
     *定义了一个BaseDataType对象的MAP数据
     * </pre>
     *
     * <code>map&lt;int32, .BaseDataType&gt; baseDataTypeMap = 3;</code>
     */

    game.tools.protocol.protobuffer.Protocol.BaseDataType getBaseDataTypeMapOrThrow(
        int key);

    /**
     * <pre>
     *repeated google.protobuf.Any any = 4; 					//Any对象，用于定义任意的值
     * </pre>
     *
     * <code>optional .Gender sex = 5;</code>
     */
    int getSexValue();
    /**
     * <pre>
     *repeated google.protobuf.Any any = 4; 					//Any对象，用于定义任意的值
     * </pre>
     *
     * <code>optional .Gender sex = 5;</code>
     */
    game.tools.protocol.protobuffer.Protocol.Gender getSex();
  }
  /**
   * Protobuf type {@code ComplexDataType}
   */
  public  static final class ComplexDataType extends
      com.google.protobuf.GeneratedMessageLite<
          ComplexDataType, ComplexDataType.Builder> implements
      // @@protoc_insertion_point(message_implements:ComplexDataType)
      ComplexDataTypeOrBuilder {
    private ComplexDataType() {
      nameList_ = com.google.protobuf.GeneratedMessageLite.emptyProtobufList();
      baseDataTypeList_ = emptyProtobufList();
    }
    private int bitField0_;
    public static final int NAMELIST_FIELD_NUMBER = 1;
    private com.google.protobuf.Internal.ProtobufList<String> nameList_;
    /**
     * <pre>
     *定义了一个字符串的list列表
     * </pre>
     *
     * <code>repeated string nameList = 1;</code>
     */
    public java.util.List<String> getNameListList() {
      return nameList_;
    }
    /**
     * <pre>
     *定义了一个字符串的list列表
     * </pre>
     *
     * <code>repeated string nameList = 1;</code>
     */
    public int getNameListCount() {
      return nameList_.size();
    }
    /**
     * <pre>
     *定义了一个字符串的list列表
     * </pre>
     *
     * <code>repeated string nameList = 1;</code>
     */
    public java.lang.String getNameList(int index) {
      return nameList_.get(index);
    }
    /**
     * <pre>
     *定义了一个字符串的list列表
     * </pre>
     *
     * <code>repeated string nameList = 1;</code>
     */
    public com.google.protobuf.ByteString
        getNameListBytes(int index) {
      return com.google.protobuf.ByteString.copyFromUtf8(
          nameList_.get(index));
    }
    private void ensureNameListIsMutable() {
      if (!nameList_.isModifiable()) {
        nameList_ =
            com.google.protobuf.GeneratedMessageLite.mutableCopy(nameList_);
       }
    }
    /**
     * <pre>
     *定义了一个字符串的list列表
     * </pre>
     *
     * <code>repeated string nameList = 1;</code>
     */
    private void setNameList(
        int index, java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  ensureNameListIsMutable();
      nameList_.set(index, value);
    }
    /**
     * <pre>
     *定义了一个字符串的list列表
     * </pre>
     *
     * <code>repeated string nameList = 1;</code>
     */
    private void addNameList(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  ensureNameListIsMutable();
      nameList_.add(value);
    }
    /**
     * <pre>
     *定义了一个字符串的list列表
     * </pre>
     *
     * <code>repeated string nameList = 1;</code>
     */
    private void addAllNameList(
        java.lang.Iterable<java.lang.String> values) {
      ensureNameListIsMutable();
      com.google.protobuf.AbstractMessageLite.addAll(
          values, nameList_);
    }
    /**
     * <pre>
     *定义了一个字符串的list列表
     * </pre>
     *
     * <code>repeated string nameList = 1;</code>
     */
    private void clearNameList() {
      nameList_ = com.google.protobuf.GeneratedMessageLite.emptyProtobufList();
    }
    /**
     * <pre>
     *定义了一个字符串的list列表
     * </pre>
     *
     * <code>repeated string nameList = 1;</code>
     */
    private void addNameListBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
      ensureNameListIsMutable();
      nameList_.add(value.toStringUtf8());
    }

    public static final int BASEDATATYPELIST_FIELD_NUMBER = 2;
    private com.google.protobuf.Internal.ProtobufList<game.tools.protocol.protobuffer.Protocol.BaseDataType> baseDataTypeList_;
    /**
     * <pre>
     *定义了一个BaseDataType对象的列表数据
     * </pre>
     *
     * <code>repeated .BaseDataType baseDataTypeList = 2;</code>
     */
    public java.util.List<game.tools.protocol.protobuffer.Protocol.BaseDataType> getBaseDataTypeListList() {
      return baseDataTypeList_;
    }
    /**
     * <pre>
     *定义了一个BaseDataType对象的列表数据
     * </pre>
     *
     * <code>repeated .BaseDataType baseDataTypeList = 2;</code>
     */
    public java.util.List<? extends game.tools.protocol.protobuffer.Protocol.BaseDataTypeOrBuilder> 
        getBaseDataTypeListOrBuilderList() {
      return baseDataTypeList_;
    }
    /**
     * <pre>
     *定义了一个BaseDataType对象的列表数据
     * </pre>
     *
     * <code>repeated .BaseDataType baseDataTypeList = 2;</code>
     */
    public int getBaseDataTypeListCount() {
      return baseDataTypeList_.size();
    }
    /**
     * <pre>
     *定义了一个BaseDataType对象的列表数据
     * </pre>
     *
     * <code>repeated .BaseDataType baseDataTypeList = 2;</code>
     */
    public game.tools.protocol.protobuffer.Protocol.BaseDataType getBaseDataTypeList(int index) {
      return baseDataTypeList_.get(index);
    }
    /**
     * <pre>
     *定义了一个BaseDataType对象的列表数据
     * </pre>
     *
     * <code>repeated .BaseDataType baseDataTypeList = 2;</code>
     */
    public game.tools.protocol.protobuffer.Protocol.BaseDataTypeOrBuilder getBaseDataTypeListOrBuilder(
        int index) {
      return baseDataTypeList_.get(index);
    }
    private void ensureBaseDataTypeListIsMutable() {
      if (!baseDataTypeList_.isModifiable()) {
        baseDataTypeList_ =
            com.google.protobuf.GeneratedMessageLite.mutableCopy(baseDataTypeList_);
       }
    }

    /**
     * <pre>
     *定义了一个BaseDataType对象的列表数据
     * </pre>
     *
     * <code>repeated .BaseDataType baseDataTypeList = 2;</code>
     */
    private void setBaseDataTypeList(
        int index, game.tools.protocol.protobuffer.Protocol.BaseDataType value) {
      if (value == null) {
        throw new NullPointerException();
      }
      ensureBaseDataTypeListIsMutable();
      baseDataTypeList_.set(index, value);
    }
    /**
     * <pre>
     *定义了一个BaseDataType对象的列表数据
     * </pre>
     *
     * <code>repeated .BaseDataType baseDataTypeList = 2;</code>
     */
    private void setBaseDataTypeList(
        int index, game.tools.protocol.protobuffer.Protocol.BaseDataType.Builder builderForValue) {
      ensureBaseDataTypeListIsMutable();
      baseDataTypeList_.set(index, builderForValue.build());
    }
    /**
     * <pre>
     *定义了一个BaseDataType对象的列表数据
     * </pre>
     *
     * <code>repeated .BaseDataType baseDataTypeList = 2;</code>
     */
    private void addBaseDataTypeList(game.tools.protocol.protobuffer.Protocol.BaseDataType value) {
      if (value == null) {
        throw new NullPointerException();
      }
      ensureBaseDataTypeListIsMutable();
      baseDataTypeList_.add(value);
    }
    /**
     * <pre>
     *定义了一个BaseDataType对象的列表数据
     * </pre>
     *
     * <code>repeated .BaseDataType baseDataTypeList = 2;</code>
     */
    private void addBaseDataTypeList(
        int index, game.tools.protocol.protobuffer.Protocol.BaseDataType value) {
      if (value == null) {
        throw new NullPointerException();
      }
      ensureBaseDataTypeListIsMutable();
      baseDataTypeList_.add(index, value);
    }
    /**
     * <pre>
     *定义了一个BaseDataType对象的列表数据
     * </pre>
     *
     * <code>repeated .BaseDataType baseDataTypeList = 2;</code>
     */
    private void addBaseDataTypeList(
        game.tools.protocol.protobuffer.Protocol.BaseDataType.Builder builderForValue) {
      ensureBaseDataTypeListIsMutable();
      baseDataTypeList_.add(builderForValue.build());
    }
    /**
     * <pre>
     *定义了一个BaseDataType对象的列表数据
     * </pre>
     *
     * <code>repeated .BaseDataType baseDataTypeList = 2;</code>
     */
    private void addBaseDataTypeList(
        int index, game.tools.protocol.protobuffer.Protocol.BaseDataType.Builder builderForValue) {
      ensureBaseDataTypeListIsMutable();
      baseDataTypeList_.add(index, builderForValue.build());
    }
    /**
     * <pre>
     *定义了一个BaseDataType对象的列表数据
     * </pre>
     *
     * <code>repeated .BaseDataType baseDataTypeList = 2;</code>
     */
    private void addAllBaseDataTypeList(
        java.lang.Iterable<? extends game.tools.protocol.protobuffer.Protocol.BaseDataType> values) {
      ensureBaseDataTypeListIsMutable();
      com.google.protobuf.AbstractMessageLite.addAll(
          values, baseDataTypeList_);
    }
    /**
     * <pre>
     *定义了一个BaseDataType对象的列表数据
     * </pre>
     *
     * <code>repeated .BaseDataType baseDataTypeList = 2;</code>
     */
    private void clearBaseDataTypeList() {
      baseDataTypeList_ = emptyProtobufList();
    }
    /**
     * <pre>
     *定义了一个BaseDataType对象的列表数据
     * </pre>
     *
     * <code>repeated .BaseDataType baseDataTypeList = 2;</code>
     */
    private void removeBaseDataTypeList(int index) {
      ensureBaseDataTypeListIsMutable();
      baseDataTypeList_.remove(index);
    }

    public static final int BASEDATATYPEMAP_FIELD_NUMBER = 3;
    private static final class BaseDataTypeMapDefaultEntryHolder {
      static final com.google.protobuf.MapEntryLite<
          java.lang.Integer, game.tools.protocol.protobuffer.Protocol.BaseDataType> defaultEntry =
              com.google.protobuf.MapEntryLite
              .<java.lang.Integer, game.tools.protocol.protobuffer.Protocol.BaseDataType>newDefaultInstance(
                  com.google.protobuf.WireFormat.FieldType.INT32,
                  0,
                  com.google.protobuf.WireFormat.FieldType.MESSAGE,
                  game.tools.protocol.protobuffer.Protocol.BaseDataType.getDefaultInstance());
    }
    private com.google.protobuf.MapFieldLite<
        java.lang.Integer, game.tools.protocol.protobuffer.Protocol.BaseDataType> baseDataTypeMap_ =
            com.google.protobuf.MapFieldLite.emptyMapField();
    private com.google.protobuf.MapFieldLite<java.lang.Integer, game.tools.protocol.protobuffer.Protocol.BaseDataType>
    internalGetBaseDataTypeMap() {
      return baseDataTypeMap_;
    }
    private com.google.protobuf.MapFieldLite<java.lang.Integer, game.tools.protocol.protobuffer.Protocol.BaseDataType>
    internalGetMutableBaseDataTypeMap() {
      if (!baseDataTypeMap_.isMutable()) {
        baseDataTypeMap_ = baseDataTypeMap_.mutableCopy();
      }
      return baseDataTypeMap_;
    }

    public int getBaseDataTypeMapCount() {
      return internalGetBaseDataTypeMap().size();
    }
    /**
     * <pre>
     *定义了一个BaseDataType对象的MAP数据
     * </pre>
     *
     * <code>map&lt;int32, .BaseDataType&gt; baseDataTypeMap = 3;</code>
     */

    public boolean containsBaseDataTypeMap(
        int key) {
      
      return internalGetBaseDataTypeMap().containsKey(key);
    }
    /**
     * Use {@link #getBaseDataTypeMapMap()} instead.
     */
    @java.lang.Deprecated
    public java.util.Map<java.lang.Integer, game.tools.protocol.protobuffer.Protocol.BaseDataType> getBaseDataTypeMap() {
      return getBaseDataTypeMapMap();
    }
    /**
     * <pre>
     *定义了一个BaseDataType对象的MAP数据
     * </pre>
     *
     * <code>map&lt;int32, .BaseDataType&gt; baseDataTypeMap = 3;</code>
     */

    public java.util.Map<java.lang.Integer, game.tools.protocol.protobuffer.Protocol.BaseDataType> getBaseDataTypeMapMap() {
      return java.util.Collections.unmodifiableMap(
          internalGetBaseDataTypeMap());
    }
    /**
     * <pre>
     *定义了一个BaseDataType对象的MAP数据
     * </pre>
     *
     * <code>map&lt;int32, .BaseDataType&gt; baseDataTypeMap = 3;</code>
     */

    public game.tools.protocol.protobuffer.Protocol.BaseDataType getBaseDataTypeMapOrDefault(
        int key,
        game.tools.protocol.protobuffer.Protocol.BaseDataType defaultValue) {
      
      java.util.Map<java.lang.Integer, game.tools.protocol.protobuffer.Protocol.BaseDataType> map =
          internalGetBaseDataTypeMap();
      return map.containsKey(key) ? map.get(key) : defaultValue;
    }
    /**
     * <pre>
     *定义了一个BaseDataType对象的MAP数据
     * </pre>
     *
     * <code>map&lt;int32, .BaseDataType&gt; baseDataTypeMap = 3;</code>
     */

    public game.tools.protocol.protobuffer.Protocol.BaseDataType getBaseDataTypeMapOrThrow(
        int key) {
      
      java.util.Map<java.lang.Integer, game.tools.protocol.protobuffer.Protocol.BaseDataType> map =
          internalGetBaseDataTypeMap();
      if (!map.containsKey(key)) {
        throw new java.lang.IllegalArgumentException();
      }
      return map.get(key);
    }
    /**
     * <pre>
     *定义了一个BaseDataType对象的MAP数据
     * </pre>
     *
     * <code>map&lt;int32, .BaseDataType&gt; baseDataTypeMap = 3;</code>
     */
    private java.util.Map<java.lang.Integer, game.tools.protocol.protobuffer.Protocol.BaseDataType>
    getMutableBaseDataTypeMapMap() {
      return internalGetMutableBaseDataTypeMap();
    }

    public static final int SEX_FIELD_NUMBER = 5;
    private int sex_;
    /**
     * <pre>
     *repeated google.protobuf.Any any = 4; 					//Any对象，用于定义任意的值
     * </pre>
     *
     * <code>optional .Gender sex = 5;</code>
     */
    public int getSexValue() {
      return sex_;
    }
    /**
     * <pre>
     *repeated google.protobuf.Any any = 4; 					//Any对象，用于定义任意的值
     * </pre>
     *
     * <code>optional .Gender sex = 5;</code>
     */
    public game.tools.protocol.protobuffer.Protocol.Gender getSex() {
      game.tools.protocol.protobuffer.Protocol.Gender result = game.tools.protocol.protobuffer.Protocol.Gender.forNumber(sex_);
      return result == null ? game.tools.protocol.protobuffer.Protocol.Gender.UNRECOGNIZED : result;
    }
    /**
     * <pre>
     *repeated google.protobuf.Any any = 4; 					//Any对象，用于定义任意的值
     * </pre>
     *
     * <code>optional .Gender sex = 5;</code>
     */
    private void setSexValue(int value) {
        sex_ = value;
    }
    /**
     * <pre>
     *repeated google.protobuf.Any any = 4; 					//Any对象，用于定义任意的值
     * </pre>
     *
     * <code>optional .Gender sex = 5;</code>
     */
    private void setSex(game.tools.protocol.protobuffer.Protocol.Gender value) {
      if (value == null) {
        throw new NullPointerException();
      }
      
      sex_ = value.getNumber();
    }
    /**
     * <pre>
     *repeated google.protobuf.Any any = 4; 					//Any对象，用于定义任意的值
     * </pre>
     *
     * <code>optional .Gender sex = 5;</code>
     */
    private void clearSex() {
      
      sex_ = 0;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      for (int i = 0; i < nameList_.size(); i++) {
        output.writeString(1, nameList_.get(i));
      }
      for (int i = 0; i < baseDataTypeList_.size(); i++) {
        output.writeMessage(2, baseDataTypeList_.get(i));
      }
      for (java.util.Map.Entry<java.lang.Integer, game.tools.protocol.protobuffer.Protocol.BaseDataType> entry
           : internalGetBaseDataTypeMap().entrySet()) {
        BaseDataTypeMapDefaultEntryHolder.defaultEntry.serializeTo(
            output, 3, entry.getKey(), entry.getValue());
      }
      if (sex_ != game.tools.protocol.protobuffer.Protocol.Gender.MAN.getNumber()) {
        output.writeEnum(5, sex_);
      }
    }

    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      {
        int dataSize = 0;
        for (int i = 0; i < nameList_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeStringSizeNoTag(nameList_.get(i));
        }
        size += dataSize;
        size += 1 * getNameListList().size();
      }
      for (int i = 0; i < baseDataTypeList_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, baseDataTypeList_.get(i));
      }
      for (java.util.Map.Entry<java.lang.Integer, game.tools.protocol.protobuffer.Protocol.BaseDataType> entry
           : internalGetBaseDataTypeMap().entrySet()) {
        size += BaseDataTypeMapDefaultEntryHolder.defaultEntry.computeMessageSize(
          3, entry.getKey(), entry.getValue());
      }
      if (sex_ != game.tools.protocol.protobuffer.Protocol.Gender.MAN.getNumber()) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(5, sex_);
      }
      memoizedSerializedSize = size;
      return size;
    }

    public static game.tools.protocol.protobuffer.Protocol.ComplexDataType parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static game.tools.protocol.protobuffer.Protocol.ComplexDataType parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static game.tools.protocol.protobuffer.Protocol.ComplexDataType parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static game.tools.protocol.protobuffer.Protocol.ComplexDataType parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static game.tools.protocol.protobuffer.Protocol.ComplexDataType parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static game.tools.protocol.protobuffer.Protocol.ComplexDataType parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static game.tools.protocol.protobuffer.Protocol.ComplexDataType parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input);
    }
    public static game.tools.protocol.protobuffer.Protocol.ComplexDataType parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static game.tools.protocol.protobuffer.Protocol.ComplexDataType parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static game.tools.protocol.protobuffer.Protocol.ComplexDataType parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(game.tools.protocol.protobuffer.Protocol.ComplexDataType prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }

    /**
     * Protobuf type {@code ComplexDataType}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          game.tools.protocol.protobuffer.Protocol.ComplexDataType, Builder> implements
        // @@protoc_insertion_point(builder_implements:ComplexDataType)
        game.tools.protocol.protobuffer.Protocol.ComplexDataTypeOrBuilder {
      // Construct using game.tools.protocol.protobuffer.Protocol.ComplexDataType.newBuilder()
      private Builder() {
        super(DEFAULT_INSTANCE);
      }


      /**
       * <pre>
       *定义了一个字符串的list列表
       * </pre>
       *
       * <code>repeated string nameList = 1;</code>
       */
      public java.util.List<String>
          getNameListList() {
        return java.util.Collections.unmodifiableList(
            instance.getNameListList());
      }
      /**
       * <pre>
       *定义了一个字符串的list列表
       * </pre>
       *
       * <code>repeated string nameList = 1;</code>
       */
      public int getNameListCount() {
        return instance.getNameListCount();
      }
      /**
       * <pre>
       *定义了一个字符串的list列表
       * </pre>
       *
       * <code>repeated string nameList = 1;</code>
       */
      public java.lang.String getNameList(int index) {
        return instance.getNameList(index);
      }
      /**
       * <pre>
       *定义了一个字符串的list列表
       * </pre>
       *
       * <code>repeated string nameList = 1;</code>
       */
      public com.google.protobuf.ByteString
          getNameListBytes(int index) {
        return instance.getNameListBytes(index);
      }
      /**
       * <pre>
       *定义了一个字符串的list列表
       * </pre>
       *
       * <code>repeated string nameList = 1;</code>
       */
      public Builder setNameList(
          int index, java.lang.String value) {
        copyOnWrite();
        instance.setNameList(index, value);
        return this;
      }
      /**
       * <pre>
       *定义了一个字符串的list列表
       * </pre>
       *
       * <code>repeated string nameList = 1;</code>
       */
      public Builder addNameList(
          java.lang.String value) {
        copyOnWrite();
        instance.addNameList(value);
        return this;
      }
      /**
       * <pre>
       *定义了一个字符串的list列表
       * </pre>
       *
       * <code>repeated string nameList = 1;</code>
       */
      public Builder addAllNameList(
          java.lang.Iterable<java.lang.String> values) {
        copyOnWrite();
        instance.addAllNameList(values);
        return this;
      }
      /**
       * <pre>
       *定义了一个字符串的list列表
       * </pre>
       *
       * <code>repeated string nameList = 1;</code>
       */
      public Builder clearNameList() {
        copyOnWrite();
        instance.clearNameList();
        return this;
      }
      /**
       * <pre>
       *定义了一个字符串的list列表
       * </pre>
       *
       * <code>repeated string nameList = 1;</code>
       */
      public Builder addNameListBytes(
          com.google.protobuf.ByteString value) {
        copyOnWrite();
        instance.addNameListBytes(value);
        return this;
      }

      /**
       * <pre>
       *定义了一个BaseDataType对象的列表数据
       * </pre>
       *
       * <code>repeated .BaseDataType baseDataTypeList = 2;</code>
       */
      public java.util.List<game.tools.protocol.protobuffer.Protocol.BaseDataType> getBaseDataTypeListList() {
        return java.util.Collections.unmodifiableList(
            instance.getBaseDataTypeListList());
      }
      /**
       * <pre>
       *定义了一个BaseDataType对象的列表数据
       * </pre>
       *
       * <code>repeated .BaseDataType baseDataTypeList = 2;</code>
       */
      public int getBaseDataTypeListCount() {
        return instance.getBaseDataTypeListCount();
      }/**
       * <pre>
       *定义了一个BaseDataType对象的列表数据
       * </pre>
       *
       * <code>repeated .BaseDataType baseDataTypeList = 2;</code>
       */
      public game.tools.protocol.protobuffer.Protocol.BaseDataType getBaseDataTypeList(int index) {
        return instance.getBaseDataTypeList(index);
      }
      /**
       * <pre>
       *定义了一个BaseDataType对象的列表数据
       * </pre>
       *
       * <code>repeated .BaseDataType baseDataTypeList = 2;</code>
       */
      public Builder setBaseDataTypeList(
          int index, game.tools.protocol.protobuffer.Protocol.BaseDataType value) {
        copyOnWrite();
        instance.setBaseDataTypeList(index, value);
        return this;
      }
      /**
       * <pre>
       *定义了一个BaseDataType对象的列表数据
       * </pre>
       *
       * <code>repeated .BaseDataType baseDataTypeList = 2;</code>
       */
      public Builder setBaseDataTypeList(
          int index, game.tools.protocol.protobuffer.Protocol.BaseDataType.Builder builderForValue) {
        copyOnWrite();
        instance.setBaseDataTypeList(index, builderForValue);
        return this;
      }
      /**
       * <pre>
       *定义了一个BaseDataType对象的列表数据
       * </pre>
       *
       * <code>repeated .BaseDataType baseDataTypeList = 2;</code>
       */
      public Builder addBaseDataTypeList(game.tools.protocol.protobuffer.Protocol.BaseDataType value) {
        copyOnWrite();
        instance.addBaseDataTypeList(value);
        return this;
      }
      /**
       * <pre>
       *定义了一个BaseDataType对象的列表数据
       * </pre>
       *
       * <code>repeated .BaseDataType baseDataTypeList = 2;</code>
       */
      public Builder addBaseDataTypeList(
          int index, game.tools.protocol.protobuffer.Protocol.BaseDataType value) {
        copyOnWrite();
        instance.addBaseDataTypeList(index, value);
        return this;
      }
      /**
       * <pre>
       *定义了一个BaseDataType对象的列表数据
       * </pre>
       *
       * <code>repeated .BaseDataType baseDataTypeList = 2;</code>
       */
      public Builder addBaseDataTypeList(
          game.tools.protocol.protobuffer.Protocol.BaseDataType.Builder builderForValue) {
        copyOnWrite();
        instance.addBaseDataTypeList(builderForValue);
        return this;
      }
      /**
       * <pre>
       *定义了一个BaseDataType对象的列表数据
       * </pre>
       *
       * <code>repeated .BaseDataType baseDataTypeList = 2;</code>
       */
      public Builder addBaseDataTypeList(
          int index, game.tools.protocol.protobuffer.Protocol.BaseDataType.Builder builderForValue) {
        copyOnWrite();
        instance.addBaseDataTypeList(index, builderForValue);
        return this;
      }
      /**
       * <pre>
       *定义了一个BaseDataType对象的列表数据
       * </pre>
       *
       * <code>repeated .BaseDataType baseDataTypeList = 2;</code>
       */
      public Builder addAllBaseDataTypeList(
          java.lang.Iterable<? extends game.tools.protocol.protobuffer.Protocol.BaseDataType> values) {
        copyOnWrite();
        instance.addAllBaseDataTypeList(values);
        return this;
      }
      /**
       * <pre>
       *定义了一个BaseDataType对象的列表数据
       * </pre>
       *
       * <code>repeated .BaseDataType baseDataTypeList = 2;</code>
       */
      public Builder clearBaseDataTypeList() {
        copyOnWrite();
        instance.clearBaseDataTypeList();
        return this;
      }
      /**
       * <pre>
       *定义了一个BaseDataType对象的列表数据
       * </pre>
       *
       * <code>repeated .BaseDataType baseDataTypeList = 2;</code>
       */
      public Builder removeBaseDataTypeList(int index) {
        copyOnWrite();
        instance.removeBaseDataTypeList(index);
        return this;
      }


      public int getBaseDataTypeMapCount() {
        return instance.getBaseDataTypeMapMap().size();
      }
      /**
       * <pre>
       *定义了一个BaseDataType对象的MAP数据
       * </pre>
       *
       * <code>map&lt;int32, .BaseDataType&gt; baseDataTypeMap = 3;</code>
       */

      public boolean containsBaseDataTypeMap(
          int key) {
        
        return instance.getBaseDataTypeMapMap().containsKey(key);
      }

      public Builder clearBaseDataTypeMap() {
        copyOnWrite();
        instance.getMutableBaseDataTypeMapMap().clear();
        return this;
      }
      /**
       * <pre>
       *定义了一个BaseDataType对象的MAP数据
       * </pre>
       *
       * <code>map&lt;int32, .BaseDataType&gt; baseDataTypeMap = 3;</code>
       */

      public Builder removeBaseDataTypeMap(
          int key) {
        
        copyOnWrite();
        instance.getMutableBaseDataTypeMapMap().remove(key);
        return this;
      }
      /**
       * Use {@link #getBaseDataTypeMapMap()} instead.
       */
      @java.lang.Deprecated
      public java.util.Map<java.lang.Integer, game.tools.protocol.protobuffer.Protocol.BaseDataType> getBaseDataTypeMap() {
        return getBaseDataTypeMapMap();
      }
      /**
       * <pre>
       *定义了一个BaseDataType对象的MAP数据
       * </pre>
       *
       * <code>map&lt;int32, .BaseDataType&gt; baseDataTypeMap = 3;</code>
       */
      public java.util.Map<java.lang.Integer, game.tools.protocol.protobuffer.Protocol.BaseDataType> getBaseDataTypeMapMap() {
        return java.util.Collections.unmodifiableMap(
            instance.getBaseDataTypeMapMap());
      }
      /**
       * <pre>
       *定义了一个BaseDataType对象的MAP数据
       * </pre>
       *
       * <code>map&lt;int32, .BaseDataType&gt; baseDataTypeMap = 3;</code>
       */

      public game.tools.protocol.protobuffer.Protocol.BaseDataType getBaseDataTypeMapOrDefault(
          int key,
          game.tools.protocol.protobuffer.Protocol.BaseDataType defaultValue) {
        
        java.util.Map<java.lang.Integer, game.tools.protocol.protobuffer.Protocol.BaseDataType> map =
            instance.getBaseDataTypeMapMap();
        return map.containsKey(key) ? map.get(key) : defaultValue;
      }
      /**
       * <pre>
       *定义了一个BaseDataType对象的MAP数据
       * </pre>
       *
       * <code>map&lt;int32, .BaseDataType&gt; baseDataTypeMap = 3;</code>
       */

      public game.tools.protocol.protobuffer.Protocol.BaseDataType getBaseDataTypeMapOrThrow(
          int key) {
        
        java.util.Map<java.lang.Integer, game.tools.protocol.protobuffer.Protocol.BaseDataType> map =
            instance.getBaseDataTypeMapMap();
        if (!map.containsKey(key)) {
          throw new java.lang.IllegalArgumentException();
        }
        return map.get(key);
      }
      /**
       * <pre>
       *定义了一个BaseDataType对象的MAP数据
       * </pre>
       *
       * <code>map&lt;int32, .BaseDataType&gt; baseDataTypeMap = 3;</code>
       */
      public Builder putBaseDataTypeMap(
          int key,
          game.tools.protocol.protobuffer.Protocol.BaseDataType value) {
        
        if (value == null) { throw new java.lang.NullPointerException(); }
        copyOnWrite();
        instance.getMutableBaseDataTypeMapMap().put(key, value);
        return this;
      }
      /**
       * <pre>
       *定义了一个BaseDataType对象的MAP数据
       * </pre>
       *
       * <code>map&lt;int32, .BaseDataType&gt; baseDataTypeMap = 3;</code>
       */
      public Builder putAllBaseDataTypeMap(
          java.util.Map<java.lang.Integer, game.tools.protocol.protobuffer.Protocol.BaseDataType> values) {
        copyOnWrite();
        instance.getMutableBaseDataTypeMapMap().putAll(values);
        return this;
      }

      /**
       * <pre>
       *repeated google.protobuf.Any any = 4; 					//Any对象，用于定义任意的值
       * </pre>
       *
       * <code>optional .Gender sex = 5;</code>
       */
      public int getSexValue() {
        return instance.getSexValue();
      }
      /**
       * <pre>
       *repeated google.protobuf.Any any = 4; 					//Any对象，用于定义任意的值
       * </pre>
       *
       * <code>optional .Gender sex = 5;</code>
       */
      public Builder setSexValue(int value) {
        copyOnWrite();
        instance.setSexValue(value);
        return this;
      }
      /**
       * <pre>
       *repeated google.protobuf.Any any = 4; 					//Any对象，用于定义任意的值
       * </pre>
       *
       * <code>optional .Gender sex = 5;</code>
       */
      public game.tools.protocol.protobuffer.Protocol.Gender getSex() {
        return instance.getSex();
      }
      /**
       * <pre>
       *repeated google.protobuf.Any any = 4; 					//Any对象，用于定义任意的值
       * </pre>
       *
       * <code>optional .Gender sex = 5;</code>
       */
      public Builder setSex(game.tools.protocol.protobuffer.Protocol.Gender value) {
        copyOnWrite();
        instance.setSex(value);
        return this;
      }
      /**
       * <pre>
       *repeated google.protobuf.Any any = 4; 					//Any对象，用于定义任意的值
       * </pre>
       *
       * <code>optional .Gender sex = 5;</code>
       */
      public Builder clearSex() {
        copyOnWrite();
        instance.clearSex();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:ComplexDataType)
    }
    protected final Object dynamicMethod(
        com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
        Object arg0, Object arg1) {
      switch (method) {
        case NEW_MUTABLE_INSTANCE: {
          return new game.tools.protocol.protobuffer.Protocol.ComplexDataType();
        }
        case IS_INITIALIZED: {
          return DEFAULT_INSTANCE;
        }
        case MAKE_IMMUTABLE: {
          nameList_.makeImmutable();
          baseDataTypeList_.makeImmutable();
          baseDataTypeMap_.makeImmutable();
          return null;
        }
        case NEW_BUILDER: {
          return new Builder();
        }
        case VISIT: {
          Visitor visitor = (Visitor) arg0;
          game.tools.protocol.protobuffer.Protocol.ComplexDataType other = (game.tools.protocol.protobuffer.Protocol.ComplexDataType) arg1;
          nameList_= visitor.visitList(nameList_, other.nameList_);
          baseDataTypeList_= visitor.visitList(baseDataTypeList_, other.baseDataTypeList_);
          baseDataTypeMap_ = visitor.visitMap(
              baseDataTypeMap_, other.internalGetBaseDataTypeMap());
          sex_ = visitor.visitInt(sex_ != 0, sex_,    other.sex_ != 0, other.sex_);
          if (visitor == com.google.protobuf.GeneratedMessageLite.MergeFromVisitor
              .INSTANCE) {
            bitField0_ |= other.bitField0_;
          }
          return this;
        }
        case MERGE_FROM_STREAM: {
          com.google.protobuf.CodedInputStream input =
              (com.google.protobuf.CodedInputStream) arg0;
          com.google.protobuf.ExtensionRegistryLite extensionRegistry =
              (com.google.protobuf.ExtensionRegistryLite) arg1;
          try {
            boolean done = false;
            while (!done) {
              int tag = input.readTag();
              switch (tag) {
                case 0:
                  done = true;
                  break;
                default: {
                  if (!input.skipField(tag)) {
                    done = true;
                  }
                  break;
                }
                case 10: {
                  String s = input.readStringRequireUtf8();
                  if (!nameList_.isModifiable()) {
                    nameList_ =
                        com.google.protobuf.GeneratedMessageLite.mutableCopy(nameList_);
                  }
                  nameList_.add(s);
                  break;
                }
                case 18: {
                  if (!baseDataTypeList_.isModifiable()) {
                    baseDataTypeList_ =
                        com.google.protobuf.GeneratedMessageLite.mutableCopy(baseDataTypeList_);
                  }
                  baseDataTypeList_.add(
                      input.readMessage(game.tools.protocol.protobuffer.Protocol.BaseDataType.parser(), extensionRegistry));
                  break;
                }
                case 26: {
                  if (!baseDataTypeMap_.isMutable()) {
                    baseDataTypeMap_ = baseDataTypeMap_.mutableCopy();
                  }
                  BaseDataTypeMapDefaultEntryHolder.defaultEntry.parseInto(baseDataTypeMap_, input, extensionRegistry);  break;
                }
                case 40: {
                  int rawValue = input.readEnum();

                  sex_ = rawValue;
                  break;
                }
              }
            }
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw new RuntimeException(e.setUnfinishedMessage(this));
          } catch (java.io.IOException e) {
            throw new RuntimeException(
                new com.google.protobuf.InvalidProtocolBufferException(
                    e.getMessage()).setUnfinishedMessage(this));
          } finally {
          }
        }
        case GET_DEFAULT_INSTANCE: {
          return DEFAULT_INSTANCE;
        }
        case GET_PARSER: {
          if (PARSER == null) {    synchronized (game.tools.protocol.protobuffer.Protocol.ComplexDataType.class) {
              if (PARSER == null) {
                PARSER = new DefaultInstanceBasedParser(DEFAULT_INSTANCE);
              }
            }
          }
          return PARSER;
        }
      }
      throw new UnsupportedOperationException();
    }


    // @@protoc_insertion_point(class_scope:ComplexDataType)
    private static final game.tools.protocol.protobuffer.Protocol.ComplexDataType DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new ComplexDataType();
      DEFAULT_INSTANCE.makeImmutable();
    }

    public static game.tools.protocol.protobuffer.Protocol.ComplexDataType getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static volatile com.google.protobuf.Parser<ComplexDataType> PARSER;

    public static com.google.protobuf.Parser<ComplexDataType> parser() {
      return DEFAULT_INSTANCE.getParserForType();
    }
  }


  static {
  }

  // @@protoc_insertion_point(outer_class_scope)
}
